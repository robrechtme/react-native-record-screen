{"version":3,"sources":["index.tsx"],"names":["NativeModules","Dimensions","RecordScreen","RS","ReactNativeRecordScreenClass","setup","config","width","height","get","mic","fps","bitrate","startRecording","stopRecording","clean","ReactNativeRecordScreen"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,cAA1C;AAmCA,MAAM;AAAEC,EAAAA;AAAF,IAAmBF,aAAzB;AAEA,MAAMG,EAAE,GAAGD,YAAX;;AAEA,MAAME,4BAAN,CAAmC;AACzBC,EAAAA,KAAK,GAA4C;AAAA,QAA3CC,MAA2C,uEAAV,EAAU;AACvD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAoBP,UAAU,CAACQ,GAAX,CAAe,QAAf,CAA1B;AACAN,IAAAA,EAAE,CAACE,KAAH,CAAS;AACPK,MAAAA,GAAG,EAAE,IADE;AAEPH,MAAAA,KAFO;AAGPC,MAAAA,MAHO;AAIPG,MAAAA,GAAG,EAAE,EAJE;AAKPC,MAAAA,OAAO,EAAE,OAAO,IAAP,GAAc,GALhB;AAMP,SAAGN;AANI,KAAT;AAQD;;AAEDO,EAAAA,cAAc,GAAsC;AAAA,QAArCP,MAAqC,uEAAJ,EAAI;AAClD,SAAKD,KAAL,CAAWC,MAAX;AACA,WAAOH,EAAE,CAACU,cAAH,EAAP;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,WAAOX,EAAE,CAACW,aAAH,EAAP;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAOZ,EAAE,CAACY,KAAH,EAAP;AACD;;AAxBgC;;AA2BnC,MAAMC,uBAAuB,GAAG,IAAIZ,4BAAJ,EAAhC;AAEA,eAAeY,uBAAf","sourcesContent":["import { NativeModules, Dimensions } from 'react-native';\n\nexport type RecordingStartResponse = 'started' | 'permission_error';\n\nexport type RecordScreenConfigType = {\n  width?: number;\n  height?: number;\n  fps?: number;\n  bitrate?: number;\n  mic?: boolean;\n};\n\nexport type RecordingSuccessResponse = {\n  status: 'success';\n  result: {\n    outputURL: string;\n  };\n};\n\nexport type RecordingErrorResponse = {\n  status: 'error';\n  result: unknown;\n};\n\nexport type RecordingResponse =\n  | RecordingSuccessResponse\n  | RecordingErrorResponse;\n\ntype RecordScreenNativeModule = {\n  setup(config: RecordScreenConfigType): void;\n  startRecording(): Promise<RecordingStartResponse>;\n  stopRecording(): Promise<RecordingResponse>;\n  clean(): Promise<string>;\n};\n\nconst { RecordScreen } = NativeModules;\n\nconst RS = RecordScreen as RecordScreenNativeModule;\n\nclass ReactNativeRecordScreenClass {\n  private setup(config: RecordScreenConfigType = {}): void {\n    const { width, height } = Dimensions.get('window');\n    RS.setup({\n      mic: true,\n      width,\n      height,\n      fps: 60,\n      bitrate: 1920 * 1080 * 144,\n      ...config,\n    });\n  }\n\n  startRecording(config: RecordScreenConfigType = {}) {\n    this.setup(config);\n    return RS.startRecording();\n  }\n\n  stopRecording() {\n    return RS.stopRecording();\n  }\n\n  clean() {\n    return RS.clean();\n  }\n}\n\nconst ReactNativeRecordScreen = new ReactNativeRecordScreenClass();\n\nexport default ReactNativeRecordScreen;\n"]}